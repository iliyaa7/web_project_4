!function(){"use strict";var e={491:function(e){e.exports=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e},e.exports.default=e.exports,e.exports.__esModule=!0},946:function(e){e.exports=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},e.exports.default=e.exports,e.exports.__esModule=!0},33:function(e){function t(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}e.exports=function(e,n,o){return n&&t(e.prototype,n),o&&t(e,o),e},e.exports.default=e.exports,e.exports.__esModule=!0},97:function(e,t,n){var o=n(945);function r(t,n,u){return"undefined"!=typeof Reflect&&Reflect.get?(e.exports=r=Reflect.get,e.exports.default=e.exports,e.exports.__esModule=!0):(e.exports=r=function(e,t,n){var r=o(e,t);if(r){var u=Object.getOwnPropertyDescriptor(r,t);return u.get?u.get.call(n):u.value}},e.exports.default=e.exports,e.exports.__esModule=!0),r(t,n,u||t)}e.exports=r,e.exports.default=e.exports,e.exports.__esModule=!0},323:function(e){function t(n){return e.exports=t=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},e.exports.default=e.exports,e.exports.__esModule=!0,t(n)}e.exports=t,e.exports.default=e.exports,e.exports.__esModule=!0},22:function(e,t,n){var o=n(596);e.exports=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)},e.exports.default=e.exports,e.exports.__esModule=!0},424:function(e){e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.default=e.exports,e.exports.__esModule=!0},246:function(e,t,n){var o=n(924).default,r=n(491);e.exports=function(e,t){if(t&&("object"===o(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return r(e)},e.exports.default=e.exports,e.exports.__esModule=!0},596:function(e){function t(n,o){return e.exports=t=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},e.exports.default=e.exports,e.exports.__esModule=!0,t(n,o)}e.exports=t,e.exports.default=e.exports,e.exports.__esModule=!0},945:function(e,t,n){var o=n(323);e.exports=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=o(e)););return e},e.exports.default=e.exports,e.exports.__esModule=!0},924:function(e){function t(n){return"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?(e.exports=t=function(e){return typeof e},e.exports.default=e.exports,e.exports.__esModule=!0):(e.exports=t=function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.default=e.exports,e.exports.__esModule=!0),t(n)}e.exports=t,e.exports.default=e.exports,e.exports.__esModule=!0},240:function(e,t,n){var o=n(424);Object.defineProperty(t,"__esModule",{value:!0}),t.Api=void 0;var r=o(n(946)),u=o(n(33)),s=function(e,t){return fetch(e,t).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))},i=function(){function e(t){var n=t.baseUrl,o=t.headers;(0,r.default)(this,e),this._baseUrl=n,this._headers=o}return(0,u.default)(e,[{key:"getUserInfo",value:function(){return s("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}},{key:"getInitialCards",value:function(){return s("".concat(this._baseUrl,"/cards"),{headers:this._headers})}},{key:"editUserInfo",value:function(e){return s("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)})}},{key:"addPostCard",value:function(e){return s("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)})}},{key:"addLike",value:function(e){return s("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers})}},{key:"removeLike",value:function(e){return s("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers})}},{key:"deleteCard",value:function(e){return s("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers})}},{key:"editAvatar",value:function(e){return s("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)})}}]),e}();t.Api=i},578:function(e,t,n){var o=n(424);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=o(n(946)),u=o(n(33)),s=function(){function e(t,n,o,u,s){var i=t.name,a=t.link,l=t.likes,c=t._id,d=o.handleCardClick,f=u.handleLikeClick,p=s.handleDeleteClick;(0,r.default)(this,e),this._cardTitle=i,this._cardUrl=a,this._like=l,this._likes=l.length,this._cardId=c,this._templateSelector=n,this._handleCardClick=d,this._handleLikeClick=f,this._handleDeleteClick=p}return(0,u.default)(e,[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".post").cloneNode(!0)}},{key:"createCard",value:function(){return this._element=this._getTemplate(),this._element.querySelector(".post__heading").textContent=this._cardTitle,this._element.querySelector(".post__image").alt="A photo of "+this._cardTitle,this._element.querySelector(".post__image").src=this._cardUrl,this._element.querySelector(".post__like-counter").textContent=this._likes>0?this._likes:"",this._setEventListeners(),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".post__delete-button").addEventListener("click",(function(){e._handleDeleteClick(e._cardId,e._element)})),this._element.querySelector(".post__button").addEventListener("click",(function(){e._handleLikeClick(e._cardId,e._element)})),this._element.querySelector(".post__image-button").addEventListener("click",(function(){e._handleCardClick(e._cardTitle,e._cardUrl)}))}}]),e}();t.default=s},383:function(e,t,n){var o=n(424);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=o(n(946)),u=o(n(33)),s=function(){function e(t,n){(0,r.default)(this,e),this._settings=t,this._formElement=n,this._submmitButton=n.querySelector(t.submitButtonSelector),this._inputList=Array.from(n.querySelectorAll(t.inputSelector)),this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass}return(0,u.default)(e,[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.classList.add(this._errorClass),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleSubmitButton",value:function(){this._hasInvalidInput()?(this._submmitButton.classList.add(this._inactiveButtonClass),this._submmitButton.setAttribute("disabled","true")):(this._submmitButton.classList.remove(this._inactiveButtonClass),this._submmitButton.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(){var e=this;this._toggleSubmitButton(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleSubmitButton()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}]),e}();t.default=s},4:function(e,t,n){var o=n(424);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=o(n(946)),u=o(n(33)),s=function(){function e(t){(0,r.default)(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}return(0,u.default)(e,[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&(this.close(),e.preventDefault())}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){(t.target.classList.contains("popup_opened")||t.target.classList.contains("popup__close-button"))&&e.close()}))}}]),e}();t.default=s},315:function(e,t,n){var o=n(424);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=o(n(946)),u=o(n(33)),s=o(n(491)),i=o(n(97)),a=o(n(22)),l=o(n(246)),c=o(n(323));var d=function(e){(0,a.default)(d,e);var t,n,o=(t=d,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,o=(0,c.default)(t);if(n){var r=(0,c.default)(this).constructor;e=Reflect.construct(o,arguments,r)}else e=o.apply(this,arguments);return(0,l.default)(this,e)});function d(e,t){var n;return(0,r.default)(this,d),(n=o.call(this,e))._submitFormHandler=t,n._submitDeleteHandler=n._submitDeleteHandler.bind((0,s.default)(n)),n}return(0,u.default)(d,[{key:"open",value:function(e,t){(0,i.default)((0,c.default)(d.prototype),"open",this).call(this),this._cardId=e,this._cardElement=t,this._popup.addEventListener("submit",this._submitDeleteHandler)}},{key:"close",value:function(){(0,i.default)((0,c.default)(d.prototype),"close",this).call(this),this._popup.removeEventListener("submit",this._submitDeleteHandler)}},{key:"_submitDeleteHandler",value:function(e){e.preventDefault(),this._submitFormHandler(this._cardId,this._cardElement),this.close()}},{key:"setEventListeners",value:function(){(0,i.default)((0,c.default)(d.prototype),"setEventListeners",this).call(this)}}]),d}(o(n(4)).default);t.default=d},1:function(e,t,n){var o=n(424);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=o(n(946)),u=o(n(33)),s=o(n(97)),i=o(n(22)),a=o(n(246)),l=o(n(323));var c=function(e){(0,i.default)(c,e);var t,n,o=(t=c,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,o=(0,l.default)(t);if(n){var r=(0,l.default)(this).constructor;e=Reflect.construct(o,arguments,r)}else e=o.apply(this,arguments);return(0,a.default)(this,e)});function c(e,t){var n;return(0,r.default)(this,c),(n=o.call(this,e))._submitFormHandler=t,n}return(0,u.default)(c,[{key:"open",value:function(){(0,s.default)((0,l.default)(c.prototype),"open",this).call(this),this._txt=this._popup.querySelector(".popup__save-button").textContent}},{key:"close",value:function(){(0,s.default)((0,l.default)(c.prototype),"close",this).call(this),this._popup.querySelector(".popup__form").reset(),this._popup.querySelector(".popup__save-button").textContent=this._txt}},{key:"_getInputValues",value:function(){var e=this;return this._inputList=this._popup.querySelectorAll(".popup__form-input"),this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;(0,s.default)((0,l.default)(c.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("submit",(function(){e._popup.querySelector(".popup__save-button").textContent="Saving...",e._submitFormHandler(e._getInputValues())}))}}]),c}(o(n(4)).default);t.default=c},584:function(e,t,n){var o=n(424);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=o(n(946)),u=o(n(33)),s=o(n(97)),i=o(n(22)),a=o(n(246)),l=o(n(323));var c=function(e){(0,i.default)(c,e);var t,n,o=(t=c,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,o=(0,l.default)(t);if(n){var r=(0,l.default)(this).constructor;e=Reflect.construct(o,arguments,r)}else e=o.apply(this,arguments);return(0,a.default)(this,e)});function c(){return(0,r.default)(this,c),o.apply(this,arguments)}return(0,u.default)(c,[{key:"open",value:function(e,t){this._popup.querySelector(".popup__image").src=t,this._popup.querySelector(".popup__image").alt="A picture of "+e,this._popup.querySelector(".popup__caption").textContent=e,(0,s.default)((0,l.default)(c.prototype),"open",this).call(this)}}]),c}(o(n(4)).default);t.default=c},411:function(e,t,n){var o=n(424);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=o(n(946)),u=o(n(33)),s=function(){function e(t,n){var o=t.items,u=t.renderer;(0,r.default)(this,e),this._itemsArray=o,this._renderer=u,this._container=document.querySelector(n)}return(0,u.default)(e,[{key:"renderItems",value:function(e){var t=this;e&&(this._itemsArray=e),this._itemsArray.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e,t){"prepend"!==t?this._container.append(e):this._container.prepend(e)}}]),e}();t.default=s},840:function(e,t,n){var o=n(424);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=o(n(946)),u=o(n(33)),s=function(){function e(t){var n=t.userNameSelector,o=t.userAboutSelector,u=t.userAvatarSelector;(0,r.default)(this,e),this._userNameCurrentData=document.querySelector(n),this._userAboutCurrentData=document.querySelector(o),this._userAvatar=document.querySelector(u)}return(0,u.default)(e,[{key:"getUserInfo",value:function(){return{name:this._userNameCurrentData.textContent,about:this._userAboutCurrentData.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,o=(e.avatar,e._id);this._userNameCurrentData.textContent=t,this._userAboutCurrentData.textContent=n,this.id=o}},{key:"updateUserAvatar",value:function(e){var t=e.avatar;this._userAvatar.src=t}}]),e}();t.default=s},150:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.settings=t.postsContainer=void 0,t.postsContainer=".post-container",t.settings={inputSelector:".popup__form-input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"popup__form-input_type_error",errorClass:"popup__form-input-error_active"}},457:function(e,t,n){n.r(t)}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var u=t[o]={exports:{}};return e[o](u,u.exports,n),u.exports}n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},function(){var e=n(424);n(457);var t=e(n(578)),o=e(n(383)),r=e(n(411)),u=e(n(584)),s=e(n(1)),i=e(n(840)),a=n(150),l=n(240),c=e(n(315)),d=document.querySelector("#form__profile"),f=document.querySelector("#form__post"),p=document.querySelector("#form__avatar"),_=document.querySelector(".profile__info-button"),h=document.querySelector(".profile__plus-button"),v=document.querySelector(".profile__image-button"),y=document.querySelector("#name"),m=document.querySelector("#about"),b=new l.Api({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"fd1068ae-504b-49a0-9d62-632d18414be1","Content-Type":"application/json"}}),k=new i.default({userNameSelector:".profile__title",userAboutSelector:".profile__subtitle",userAvatarSelector:".profile__image"});b.getUserInfo().then((function(e){k.setUserInfo(e),k.updateUserAvatar(e)})).catch((function(e){console.log(e)}));var x=new u.default("#picture");x.setEventListeners();var C=function(e,t){x.open(e,t)},S=function(e,t){t.querySelector(".post__button").classList.contains("post__button_active")?t.querySelector(".post__button").classList.contains("post__button_active")&&b.removeLike(e).then((function(e){t.querySelector(".post__like-counter").textContent=e.likes.length>0?e.likes.length:"",t.querySelector(".post__button").classList.toggle("post__button_active")})).catch((function(e){console.log(e)})):b.addLike(e).then((function(e){t.querySelector(".post__like-counter").textContent=e.likes.length,t.querySelector(".post__button").classList.toggle("post__button_active")})).catch((function(e){console.log(e)}))},g=new c.default("#delete-post__popup",(function(e,t){b.deleteCard(e).then((function(){t.remove(),t=null})).catch((function(e){console.log(e)}))}));g.setEventListeners();var E=function(e,t){return g.open(e,t)},L=function(e,n,o,r,u,s){var i=o.handleCardClick,a=r.handleLikeClick,l=u.handleDeleteClick,c=new t.default(e,n,{handleCardClick:i},{handleLikeClick:a},{handleDeleteClick:l}).createCard();e.likes.some((function(e){return e._id==k.id}))&&c.querySelector(".post__button").classList.add("post__button_active"),e.owner._id!==k.id&&(c.querySelector(".post__delete-button").setAttribute("disabled",!0),c.querySelector(".post__delete-button").classList.add("post__delete-button_hiden")),q.addItem(c,s)},q=new r.default({renderer:function(e){L(e,"#card",{handleCardClick:C},{handleLikeClick:S},{handleDeleteClick:E})}},a.postsContainer);b.getInitialCards().then((function(e){q.renderItems(e)})).catch((function(e){console.log(e)}));var O=new s.default("#edit-profile__popup",(function(e){b.editUserInfo(e).catch((function(e){console.log(e)})),k.setUserInfo(e),O.close()}));O.setEventListeners();var I=new s.default("#edit-profile-picture__popup",(function(e){b.editAvatar(e).catch((function(e){console.log(e)})),k.updateUserAvatar(e),I.close()}));I.setEventListeners();var M=new s.default("#add-post__popup",(function(e){b.addPostCard(e).then((function(e){L(e,"#card",{handleCardClick:C},{handleLikeClick:S},{handleDeleteClick:E},"prepend"),M.close()})).catch((function(e){console.log(e)}))}));M.setEventListeners();var A=new o.default(a.settings,d),w=new o.default(a.settings,f),P=new o.default(a.settings,p);A.enableValidation(),w.enableValidation(),P.enableValidation(),_.addEventListener("click",(function(){var e=k.getUserInfo();y.value=e.name,m.value=e.about,O.open()})),h.addEventListener("click",(function(){M.open(),w.enableValidation()})),v.addEventListener("click",(function(){I.open(),P.enableValidation()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoiZ0RBUUFBLEVBQU9DLFFBUlAsU0FBZ0NDLEdBQzlCLFFBQWEsSUFBVEEsRUFDRixNQUFNLElBQUlDLGVBQWUsNkRBRzNCLE9BQU9ELEdBSVRGLEVBQU9DLFFBQWlCLFFBQUlELEVBQU9DLFFBQVNELEVBQU9DLFFBQVFHLFlBQWEsRyxnQkNIeEVKLEVBQU9DLFFBTlAsU0FBeUJJLEVBQVVDLEdBQ2pDLEtBQU1ELGFBQW9CQyxHQUN4QixNQUFNLElBQUlDLFVBQVUsc0NBS3hCUCxFQUFPQyxRQUFpQixRQUFJRCxFQUFPQyxRQUFTRCxFQUFPQyxRQUFRRyxZQUFhLEcsZUNQeEUsU0FBU0ksRUFBa0JDLEVBQVFDLEdBQ2pDLElBQUssSUFBSUMsRUFBSSxFQUFHQSxFQUFJRCxFQUFNRSxPQUFRRCxJQUFLLENBQ3JDLElBQUlFLEVBQWFILEVBQU1DLEdBQ3ZCRSxFQUFXQyxXQUFhRCxFQUFXQyxhQUFjLEVBQ2pERCxFQUFXRSxjQUFlLEVBQ3RCLFVBQVdGLElBQVlBLEVBQVdHLFVBQVcsR0FDakRDLE9BQU9DLGVBQWVULEVBQVFJLEVBQVdNLElBQUtOLElBVWxEYixFQUFPQyxRQU5QLFNBQXNCSyxFQUFhYyxFQUFZQyxHQUc3QyxPQUZJRCxHQUFZWixFQUFrQkYsRUFBWWdCLFVBQVdGLEdBQ3JEQyxHQUFhYixFQUFrQkYsRUFBYWUsR0FDekNmLEdBSVROLEVBQU9DLFFBQWlCLFFBQUlELEVBQU9DLFFBQVNELEVBQU9DLFFBQVFHLFlBQWEsRyxtQkNqQnhFLElBQUltQixFQUFnQkMsRUFBUSxLQUU1QixTQUFTQyxFQUFLaEIsRUFBUWlCLEVBQVVDLEdBb0I5QixNQW5CdUIsb0JBQVpDLFNBQTJCQSxRQUFRQyxLQUM1QzdCLEVBQU9DLFFBQVV3QixFQUFPRyxRQUFRQyxJQUNoQzdCLEVBQU9DLFFBQWlCLFFBQUlELEVBQU9DLFFBQVNELEVBQU9DLFFBQVFHLFlBQWEsSUFFeEVKLEVBQU9DLFFBQVV3QixFQUFPLFNBQWNoQixFQUFRaUIsRUFBVUMsR0FDdEQsSUFBSUcsRUFBT1AsRUFBY2QsRUFBUWlCLEdBQ2pDLEdBQUtJLEVBQUwsQ0FDQSxJQUFJQyxFQUFPZCxPQUFPZSx5QkFBeUJGLEVBQU1KLEdBRWpELE9BQUlLLEVBQUtGLElBQ0FFLEVBQUtGLElBQUlJLEtBQUtOLEdBR2hCSSxFQUFLRyxRQUdkbEMsRUFBT0MsUUFBaUIsUUFBSUQsRUFBT0MsUUFBU0QsRUFBT0MsUUFBUUcsWUFBYSxHQUduRXFCLEVBQUtoQixFQUFRaUIsRUFBVUMsR0FBWWxCLEdBRzVDVCxFQUFPQyxRQUFVd0IsRUFDakJ6QixFQUFPQyxRQUFpQixRQUFJRCxFQUFPQyxRQUFTRCxFQUFPQyxRQUFRRyxZQUFhLEcsZ0JDMUJ4RSxTQUFTK0IsRUFBZ0JDLEdBS3ZCLE9BSkFwQyxFQUFPQyxRQUFVa0MsRUFBa0JsQixPQUFPb0IsZUFBaUJwQixPQUFPcUIsZUFBaUIsU0FBeUJGLEdBQzFHLE9BQU9BLEVBQUVHLFdBQWF0QixPQUFPcUIsZUFBZUYsSUFFOUNwQyxFQUFPQyxRQUFpQixRQUFJRCxFQUFPQyxRQUFTRCxFQUFPQyxRQUFRRyxZQUFhLEVBQ2pFK0IsRUFBZ0JDLEdBR3pCcEMsRUFBT0MsUUFBVWtDLEVBQ2pCbkMsRUFBT0MsUUFBaUIsUUFBSUQsRUFBT0MsUUFBU0QsRUFBT0MsUUFBUUcsWUFBYSxHLG1CQ1R4RSxJQUFJaUMsRUFBaUJiLEVBQVEsS0FpQjdCeEIsRUFBT0MsUUFmUCxTQUFtQnVDLEVBQVVDLEdBQzNCLEdBQTBCLG1CQUFmQSxHQUE0QyxPQUFmQSxFQUN0QyxNQUFNLElBQUlsQyxVQUFVLHNEQUd0QmlDLEVBQVNsQixVQUFZTCxPQUFPeUIsT0FBT0QsR0FBY0EsRUFBV25CLFVBQVcsQ0FDckVxQixZQUFhLENBQ1hULE1BQU9NLEVBQ1B4QixVQUFVLEVBQ1ZELGNBQWMsS0FHZDBCLEdBQVlKLEVBQWVHLEVBQVVDLElBSTNDekMsRUFBT0MsUUFBaUIsUUFBSUQsRUFBT0MsUUFBU0QsRUFBT0MsUUFBUUcsWUFBYSxHLGdCQ1p4RUosRUFBT0MsUUFOUCxTQUFnQzJDLEdBQzlCLE9BQU9BLEdBQU9BLEVBQUl4QyxXQUFhd0MsRUFBTSxDQUNuQyxRQUFXQSxJQUtmNUMsRUFBT0MsUUFBaUIsUUFBSUQsRUFBT0MsUUFBU0QsRUFBT0MsUUFBUUcsWUFBYSxHLG9CQ1B4RSxJQUFJeUMsRUFBVXJCLEVBQUFBLEtBQUFBLFFBRVZzQixFQUF3QnRCLEVBQVEsS0FZcEN4QixFQUFPQyxRQVZQLFNBQW9DQyxFQUFNK0IsR0FDeEMsR0FBSUEsSUFBMkIsV0FBbEJZLEVBQVFaLElBQXNDLG1CQUFUQSxHQUNoRCxPQUFPQSxFQUNGLFFBQWEsSUFBVEEsRUFDVCxNQUFNLElBQUkxQixVQUFVLDREQUd0QixPQUFPdUMsRUFBc0I1QyxJQUkvQkYsRUFBT0MsUUFBaUIsUUFBSUQsRUFBT0MsUUFBU0QsRUFBT0MsUUFBUUcsWUFBYSxHLGdCQ2Z4RSxTQUFTMkMsRUFBZ0JYLEVBQUdZLEdBTzFCLE9BTkFoRCxFQUFPQyxRQUFVOEMsRUFBa0I5QixPQUFPb0IsZ0JBQWtCLFNBQXlCRCxFQUFHWSxHQUV0RixPQURBWixFQUFFRyxVQUFZUyxFQUNQWixHQUdUcEMsRUFBT0MsUUFBaUIsUUFBSUQsRUFBT0MsUUFBU0QsRUFBT0MsUUFBUUcsWUFBYSxFQUNqRTJDLEVBQWdCWCxFQUFHWSxHQUc1QmhELEVBQU9DLFFBQVU4QyxFQUNqQi9DLEVBQU9DLFFBQWlCLFFBQUlELEVBQU9DLFFBQVNELEVBQU9DLFFBQVFHLFlBQWEsRyxvQkNYeEUsSUFBSWtDLEVBQWlCZCxFQUFRLEtBVzdCeEIsRUFBT0MsUUFUUCxTQUF3QmdELEVBQVF2QixHQUM5QixNQUFRVCxPQUFPSyxVQUFVNEIsZUFBZWpCLEtBQUtnQixFQUFRdkIsSUFFcEMsUUFEZnVCLEVBQVNYLEVBQWVXLE1BSTFCLE9BQU9BLEdBSVRqRCxFQUFPQyxRQUFpQixRQUFJRCxFQUFPQyxRQUFTRCxFQUFPQyxRQUFRRyxZQUFhLEcsZ0JDWnhFLFNBQVN5QyxFQUFRRCxHQWlCZixNQWRzQixtQkFBWE8sUUFBb0QsaUJBQXBCQSxPQUFPQyxVQUNoRHBELEVBQU9DLFFBQVU0QyxFQUFVLFNBQWlCRCxHQUMxQyxjQUFjQSxHQUdoQjVDLEVBQU9DLFFBQWlCLFFBQUlELEVBQU9DLFFBQVNELEVBQU9DLFFBQVFHLFlBQWEsSUFFeEVKLEVBQU9DLFFBQVU0QyxFQUFVLFNBQWlCRCxHQUMxQyxPQUFPQSxHQUF5QixtQkFBWE8sUUFBeUJQLEVBQUlELGNBQWdCUSxRQUFVUCxJQUFRTyxPQUFPN0IsVUFBWSxnQkFBa0JzQixHQUczSDVDLEVBQU9DLFFBQWlCLFFBQUlELEVBQU9DLFFBQVNELEVBQU9DLFFBQVFHLFlBQWEsR0FHbkV5QyxFQUFRRCxHQUdqQjVDLEVBQU9DLFFBQVU0QyxFQUNqQjdDLEVBQU9DLFFBQWlCLFFBQUlELEVBQU9DLFFBQVNELEVBQU9DLFFBQVFHLFlBQWEsRywwSENyQmxFaUQsRUFBZ0IsU0FBQ0MsRUFBTUMsR0FDM0IsT0FBT0MsTUFBTUYsRUFBS0MsR0FDYkUsTUFBSyxTQUFBQyxHQUFHLE9BQUlBLEVBQUlDLEdBQUtELEVBQUlFLE9BQVNDLFFBQVFDLE9BQVIsaUJBQXlCSixFQUFJSyxhQUt6REMsRUFBQUEsV0FDWCxjQUFnQyxJQUFuQkMsRUFBbUIsRUFBbkJBLFFBQVNWLEVBQVUsRUFBVkEsU0FBVSxxQkFDOUJXLEtBQUtDLFNBQVdGLEVBQ2hCQyxLQUFLRSxTQUFXYixFLGdEQUdsQixXQUNFLE9BQU9GLEVBQWMsR0FBRCxPQUFJYSxLQUFLQyxTQUFULGFBQThCLENBQ2hEWixRQUFTVyxLQUFLRSxhLDZCQUlsQixXQUNFLE9BQU9mLEVBQWMsR0FBRCxPQUFJYSxLQUFLQyxTQUFULFVBQTJCLENBQzdDWixRQUFTVyxLQUFLRSxhLDBCQUlsQixTQUFhQyxHQUNYLE9BQU9oQixFQUFjLEdBQUQsT0FBSWEsS0FBS0MsU0FBVCxhQUE4QixDQUMvQ0csT0FBUSxRQUNSZixRQUFTVyxLQUFLRSxTQUNkRyxLQUFNQyxLQUFLQyxVQUFVSixPLHlCQUkxQixTQUFZQSxHQUNWLE9BQU9oQixFQUFjLEdBQUQsT0FBSWEsS0FBS0MsU0FBVCxVQUEyQixDQUM3Q0csT0FBUSxPQUNSZixRQUFTVyxLQUFLRSxTQUNkRyxLQUFNQyxLQUFLQyxVQUFVSixPLHFCQUl6QixTQUFRSyxHQUNOLE9BQU9yQixFQUFjLEdBQUQsT0FBSWEsS0FBS0MsU0FBVCx3QkFBaUNPLEdBQVUsQ0FDN0RKLE9BQVEsTUFDUmYsUUFBU1csS0FBS0UsYSx3QkFJbEIsU0FBV00sR0FDVCxPQUFPckIsRUFBYyxHQUFELE9BQUlhLEtBQUtDLFNBQVQsd0JBQWlDTyxHQUFVLENBQzdESixPQUFRLFNBQ1JmLFFBQVNXLEtBQUtFLGEsd0JBSWxCLFNBQVdNLEdBQ1QsT0FBT3JCLEVBQWMsR0FBRCxPQUFJYSxLQUFLQyxTQUFULGtCQUEyQk8sR0FBVSxDQUN2REosT0FBUSxTQUNSZixRQUFTVyxLQUFLRSxhLHdCQUlsQixTQUFXQyxHQUNULE9BQU9oQixFQUFjLEdBQUQsT0FBSWEsS0FBS0MsU0FBVCxvQkFBcUMsQ0FDdkRHLE9BQVEsUUFDUmYsUUFBU1csS0FBS0UsU0FDZEcsS0FBTUMsS0FBS0MsVUFBVUosUyxFQTNEZEwsRyx1SUNQUVcsRUFBQUEsV0FDbkIsYUFBc0NDLEVBQXRDLE9BQXlILElBQTVHQyxFQUE0RyxFQUE1R0EsS0FBTUMsRUFBc0csRUFBdEdBLEtBQU1DLEVBQWdHLEVBQWhHQSxNQUFPQyxFQUF5RixFQUF6RkEsSUFBMEJDLEVBQStELEVBQS9EQSxnQkFBcUJDLEVBQTBDLEVBQTFDQSxnQkFBcUJDLEVBQXFCLEVBQXJCQSxtQkFBcUIscUJBQ3ZIakIsS0FBS2tCLFdBQWFQLEVBQ2xCWCxLQUFLbUIsU0FBV1AsRUFDaEJaLEtBQUtvQixNQUFRUCxFQUNiYixLQUFLcUIsT0FBU1IsRUFBTW5FLE9BQ3BCc0QsS0FBS3NCLFFBQVVSLEVBQ2ZkLEtBQUt1QixrQkFBb0JiLEVBQ3pCVixLQUFLd0IsaUJBQW1CVCxFQUN4QmYsS0FBS3lCLGlCQUFtQlQsRUFDeEJoQixLQUFLMEIsbUJBQXFCVCxFLGlEQUc1QixXQU1FLE9BTG9CVSxTQUNqQkMsY0FBYzVCLEtBQUt1QixtQkFDbkJNLFFBQVFELGNBQWMsU0FDdEJFLFdBQVUsSyx3QkFLZixXQVFFLE9BUEE5QixLQUFLK0IsU0FBVy9CLEtBQUtnQyxlQUNyQmhDLEtBQUsrQixTQUFTSCxjQUFjLGtCQUFrQkssWUFBY2pDLEtBQUtrQixXQUNqRWxCLEtBQUsrQixTQUFTSCxjQUFjLGdCQUFnQk0sSUFDMUMsY0FBZ0JsQyxLQUFLa0IsV0FDdkJsQixLQUFLK0IsU0FBU0gsY0FBYyxnQkFBZ0JPLElBQU1uQyxLQUFLbUIsU0FDdkRuQixLQUFLK0IsU0FBU0gsY0FBYyx1QkFBdUJLLFlBQWNqQyxLQUFLcUIsT0FBVSxFQUFLckIsS0FBS3FCLE9BQVMsR0FDbkdyQixLQUFLb0MscUJBQ0VwQyxLQUFLK0IsVyxnQ0FHZCxXQUFxQixXQUNuQi9CLEtBQUsrQixTQUNGSCxjQUFjLHdCQUNkUyxpQkFBaUIsU0FBUyxXQUN6QixFQUFLWCxtQkFBbUIsRUFBS0osUUFBUyxFQUFLUyxhQUUvQy9CLEtBQUsrQixTQUNGSCxjQUFjLGlCQUNkUyxpQkFBaUIsU0FBUyxXQUN6QixFQUFLWixpQkFBaUIsRUFBS0gsUUFBUyxFQUFLUyxhQUU3Qy9CLEtBQUsrQixTQUNGSCxjQUFjLHVCQUNkUyxpQkFBaUIsU0FBUyxXQUN6QixFQUFLYixpQkFBaUIsRUFBS04sV0FBWSxFQUFLQyxpQixFQS9DL0JWLEcsMklDQUE2QixFQUFBQSxXQUNuQixXQUFZQyxFQUFVQyxJQUFhLHFCQUNqQ3hDLEtBQUt5QyxVQUFZRixFQUNqQnZDLEtBQUswQyxhQUFlRixFQUNwQnhDLEtBQUsyQyxlQUFpQkgsRUFBWVosY0FDaENXLEVBQVNLLHNCQUVYNUMsS0FBSzZDLFdBQWFDLE1BQU1DLEtBQ3RCUCxFQUFZUSxpQkFBaUJULEVBQVNVLGdCQUV4Q2pELEtBQUtrRCxxQkFBdUJYLEVBQVNZLG9CQUNyQ25ELEtBQUtvRCxpQkFBbUJiLEVBQVNjLGdCQUNqQ3JELEtBQUtzRCxZQUFjZixFQUFTZ0IsVyxvREFHOUIsU0FBZ0JDLEVBQWNDLEdBQzVCLElBQU1DLEVBQWUxRCxLQUFLMEMsYUFBYWQsY0FBbEIsV0FDZjRCLEVBQWFHLEdBREUsV0FHckJILEVBQWFJLFVBQVVDLElBQUk3RCxLQUFLb0Qsa0JBQ2hDTSxFQUFhRSxVQUFVQyxJQUFJN0QsS0FBS3NELGFBQ2hDSSxFQUFhekIsWUFBY3dCLEksNkJBRzdCLFNBQWdCRCxHQUNkLElBQU1FLEVBQWUxRCxLQUFLMEMsYUFBYWQsY0FBbEIsV0FDZjRCLEVBQWFHLEdBREUsV0FHckJILEVBQWFJLFVBQVVFLE9BQU85RCxLQUFLb0Qsa0JBQ25DTSxFQUFhRSxVQUFVRSxPQUFPOUQsS0FBS3NELGFBQ25DSSxFQUFhekIsWUFBYyxLLGlDQUc3QixTQUFvQnVCLEdBQ2JBLEVBQWFPLFNBQVNDLE1BR3pCaEUsS0FBS2lFLGdCQUFnQlQsR0FGckJ4RCxLQUFLa0UsZ0JBQWdCVixFQUFjQSxFQUFhVyxxQiw4QkFNcEQsV0FJRSxPQUh3Qm5FLEtBQUs2QyxXQUFXdUIsTUFDdEMsU0FBQ1osR0FBRCxPQUFtQkEsRUFBYU8sU0FBU0MsVyxpQ0FLN0MsV0FDTWhFLEtBQUtxRSxvQkFDUHJFLEtBQUsyQyxlQUFlaUIsVUFBVUMsSUFBSTdELEtBQUtrRCxzQkFDdkNsRCxLQUFLMkMsZUFBZTJCLGFBQWEsV0FBWSxVQUU3Q3RFLEtBQUsyQyxlQUFlaUIsVUFBVUUsT0FBTzlELEtBQUtrRCxzQkFDMUNsRCxLQUFLMkMsZUFBZTRCLGdCQUFnQixlLGdDQUl4QyxXQUFxQixXQUNuQnZFLEtBQUt3RSxzQkFDTHhFLEtBQUs2QyxXQUFXNEIsU0FBUSxTQUFDakIsR0FDdkJBLEVBQWFuQixpQkFBaUIsU0FBUyxXQUNyQyxFQUFLcUMsb0JBQW9CbEIsR0FDekIsRUFBS2dCLDhCLDhCQUtYLFdBQ0V4RSxLQUFLMEMsYUFBYUwsaUJBQWlCLFVBQVUsU0FBQ3NDLEdBQzVDQSxFQUFJQyxvQkFFTjVFLEtBQUtvQyx5QixFQXhFWUUsRyx5SUNBQXVDLEVBQUFBLFdBQ25CLFdBQVlDLElBQWUscUJBQ3pCOUUsS0FBSytFLE9BQVNwRCxTQUFTQyxjQUFja0QsR0FDckM5RSxLQUFLZ0YsZ0JBQW1CaEYsS0FBS2dGLGdCQUFnQkMsS0FBS2pGLE0seUNBSXBELFdBQ0VBLEtBQUsrRSxPQUFPbkIsVUFBVUMsSUFBSSxnQkFDMUJsQyxTQUFTVSxpQkFBaUIsVUFBV3JDLEtBQUtnRixtQixtQkFHNUMsV0FDRWhGLEtBQUsrRSxPQUFPbkIsVUFBVUUsT0FBTyxnQkFDN0JuQyxTQUFTdUQsb0JBQW9CLFVBQVdsRixLQUFLZ0YsbUIsNkJBSS9DLFNBQWdCTCxHQUNFLFdBQVpBLEVBQUkxSCxNQUNOK0MsS0FBS21GLFFBQ0xSLEVBQUlDLG9CLCtCQUlSLFdBQW9CLFdBQ2xCNUUsS0FBSytFLE9BQU8xQyxpQkFBaUIsU0FBUyxTQUFDc0MsSUFDakNBLEVBQUlwSSxPQUFPcUgsVUFBVXdCLFNBQVMsaUJBQW1CVCxFQUFJcEksT0FBT3FILFVBQVV3QixTQUFTLHlCQUNqRixFQUFLRCxlLEVBNUJRTixHLHlNQ0NBUSxFQUFBQSxTQUFBQSxJLG1kQUNuQixXQUFZUCxFQUFlUSxHQUFtQixtQ0FDNUMsY0FBTVIsSUFDRFMsbUJBQXFCRCxFQUMxQixFQUFLRSxxQkFBdUIsRUFBS0EscUJBQXFCUCxNQUExQixpQkFIZ0IsRSx5Q0FNOUMsU0FBTXpFLEVBQVFpRixJQUNaLGdFQUNBekYsS0FBS3NCLFFBQVVkLEVBQ2ZSLEtBQUswRixhQUFlRCxFQUNwQnpGLEtBQUsrRSxPQUFPMUMsaUJBQWlCLFNBQVVyQyxLQUFLd0Ysd0IsbUJBRzlDLFlBQ0UsaUVBQ0F4RixLQUFLK0UsT0FBT0csb0JBQW9CLFNBQVVsRixLQUFLd0Ysd0Isa0NBR2pELFNBQXFCYixHQUNuQkEsRUFBSUMsaUJBQ0o1RSxLQUFLdUYsbUJBQW1CdkYsS0FBS3NCLFFBQVN0QixLQUFLMEYsY0FDM0MxRixLQUFLbUYsVSwrQkFHUCxZQUNFLGlGLEVBMUJpQkUsQ0FEckIsUUFDeUNSLFMsMkxDQ3BCYyxFQUFBQSxTQUFBQSxJLG1kQUNuQixXQUFZYixFQUFlUSxHQUFtQixtQ0FDNUMsY0FBTVIsSUFDRFMsbUJBQXFCRCxFQUZrQixFLHlDQUs5QyxZQUNFLGdFQUNBdEYsS0FBSzRGLEtBQU81RixLQUFLK0UsT0FBT25ELGNBQWMsdUJBQXVCSyxjLG1CQUcvRCxZQUNFLGlFQUNBakMsS0FBSytFLE9BQU9uRCxjQUFjLGdCQUFnQmlFLFFBQzFDN0YsS0FBSytFLE9BQU9uRCxjQUFjLHVCQUF1QkssWUFBY2pDLEtBQUs0RixPLDZCQUd0RSxXQUFrQixXQU1oQixPQUxBNUYsS0FBSzZDLFdBQWE3QyxLQUFLK0UsT0FBTy9CLGlCQUFpQixzQkFDL0NoRCxLQUFLOEYsWUFBYyxHQUNuQjlGLEtBQUs2QyxXQUFXNEIsU0FBUSxTQUFDc0IsR0FDdkIsRUFBS0QsWUFBWUMsRUFBTXBGLE1BQVFvRixFQUFNL0gsU0FFaENnQyxLQUFLOEYsYywrQkFHZCxXQUFvQixZQUNsQiw2RUFDQTlGLEtBQUsrRSxPQUFPMUMsaUJBQWlCLFVBQVUsV0FDckMsRUFBSzBDLE9BQU9uRCxjQUFjLHVCQUF1QkssWUFBYyxZQUMvRCxFQUFLc0QsbUJBQW1CLEVBQUtTLDBCLEVBOUJkTCxDQUZyQixRQUUyQ2QsUyw2TENEdEJvQixFQUFBQSxTQUFBQSxJLDZqQkFDbkIsU0FBS3RGLEVBQU1DLEdBQ1RaLEtBQUsrRSxPQUFPbkQsY0FBYyxpQkFBaUJPLElBQU12QixFQUNqRFosS0FBSytFLE9BQU9uRCxjQUFjLGlCQUFpQk0sSUFBTSxnQkFBa0J2QixFQUNuRVgsS0FBSytFLE9BQU9uRCxjQUFjLG1CQUFtQkssWUFBY3RCLEdBQzNELG9FLEVBTGlCc0YsQ0FEckIsUUFDNENwQixTLDJJQ0R2QnFCLEVBQUFBLFdBQ25CLGFBQWlDQyxHQUFtQixJQUF0Q0MsRUFBc0MsRUFBdENBLE1BQU9DLEVBQStCLEVBQS9CQSxVQUErQixxQkFDbERyRyxLQUFLc0csWUFBY0YsRUFDbkJwRyxLQUFLdUcsVUFBWUYsRUFDakJyRyxLQUFLd0csV0FBYTdFLFNBQVNDLGNBQWN1RSxHLGdEQUczQyxTQUFZTSxHQUFXLFdBQ3JCQSxJQUFZekcsS0FBS3NHLFlBQWNHLEdBQy9CekcsS0FBS3NHLFlBQVk3QixTQUFRLFNBQUNpQyxHQUN4QixFQUFLSCxVQUFVRyxRLHFCQUtuQixTQUFRQyxFQUFTQyxHQUNNLFlBQXJCQSxFQUNFNUcsS0FBS3dHLFdBQVdLLE9BQU9GLEdBQ3ZCM0csS0FBS3dHLFdBQVdNLFFBQVFILE8sRUFsQlRULEcsMklDQUFhLEVBQUFBLFdBQ25CLGNBQXlFLElBQTNEQyxFQUEyRCxFQUEzREEsaUJBQWtCQyxFQUF5QyxFQUF6Q0Esa0JBQW1CQyxFQUFzQixFQUF0QkEsb0JBQXNCLHFCQUN2RWxILEtBQUttSCxxQkFBdUJ4RixTQUFTQyxjQUFjb0YsR0FDbkRoSCxLQUFLb0gsc0JBQXdCekYsU0FBU0MsY0FBY3FGLEdBQ3BEakgsS0FBS3FILFlBQWMxRixTQUFTQyxjQUFjc0YsRyxnREFHNUMsV0FNRSxNQUxpQixDQUNmdkcsS0FBTVgsS0FBS21ILHFCQUFxQmxGLFlBQ2hDcUYsTUFBT3RILEtBQUtvSCxzQkFBc0JuRixlLHlCQU10QyxZQUEwQyxJQUE1QnRCLEVBQTRCLEVBQTVCQSxLQUFNMkcsRUFBc0IsRUFBdEJBLE1BQWV4RyxHQUFPLEVBQWZ5RyxPQUFlLEVBQVB6RyxLQUNqQ2QsS0FBS21ILHFCQUFxQmxGLFlBQWN0QixFQUN4Q1gsS0FBS29ILHNCQUFzQm5GLFlBQWNxRixFQUN6Q3RILEtBQUsyRCxHQUFLN0MsSSw4QkFHWixZQUE2QixJQUFWeUcsRUFBVSxFQUFWQSxPQUNqQnZILEtBQUtxSCxZQUFZbEYsSUFBTW9GLE0sRUF2Qk5SLEcsb0lDQ1Msa0IsV0FDTixDQUN0QjlELGNBQWUscUJBQ2ZMLHFCQUFzQixzQkFDdEJPLG9CQUFxQiw4QkFDckJFLGdCQUFpQiwrQkFDakJFLFdBQVksbUMsNkJDTlZpRSxFQUEyQixHQUcvQixTQUFTQyxFQUFvQkMsR0FFNUIsSUFBSUMsRUFBZUgsRUFBeUJFLEdBQzVDLFFBQXFCRSxJQUFqQkQsRUFDSCxPQUFPQSxFQUFhNUwsUUFHckIsSUFBSUQsRUFBUzBMLEVBQXlCRSxHQUFZLENBR2pEM0wsUUFBUyxJQU9WLE9BSEE4TCxFQUFvQkgsR0FBVTVMLEVBQVFBLEVBQU9DLFFBQVMwTCxHQUcvQzNMLEVBQU9DLFFDcEJmMEwsRUFBb0JLLEVBQUksU0FBUy9MLEdBQ1gsb0JBQVhrRCxRQUEwQkEsT0FBTzhJLGFBQzFDaEwsT0FBT0MsZUFBZWpCLEVBQVNrRCxPQUFPOEksWUFBYSxDQUFFL0osTUFBTyxXQUU3RGpCLE9BQU9DLGVBQWVqQixFQUFTLGFBQWMsQ0FBRWlDLE9BQU8sSyx3QkNMdkQsT0FDQSxnQkFDQSxZQUNBLFlBQ0EsWUFDQSxVQUNBLFlBQ0EsU0FDQSxTQUNBLFlBSU1nSyxFQUFXckcsU0FBU0MsY0FBYyxrQkFDbENxRyxFQUFXdEcsU0FBU0MsY0FBYyxlQUNsQ3NHLEVBQWF2RyxTQUFTQyxjQUFjLGlCQUNwQ3VHLEVBQXlCeEcsU0FBU0MsY0FBYyx5QkFDaER3RyxFQUFxQnpHLFNBQVNDLGNBQWMseUJBQzVDeUcsRUFBb0IxRyxTQUFTQyxjQUFjLDBCQUMzQzBHLEVBQWdCM0csU0FBU0MsY0FBYyxTQUN2QzJHLEVBQWlCNUcsU0FBU0MsY0FBYyxVQU14QzRHLEVBQU0sSUFBSTFJLEVBQUFBLElBQUksQ0FDbEJDLFFBQVMsOENBQ1RWLFFBQVMsQ0FDUG9KLGNBQWUsdUNBQ2YsZUFBZ0Isc0JBWWRDLEVBQW1CLElBQUkzQixFQUFBQSxRQUFTLENBQ3BDQyxpQkFBa0Isa0JBQ2xCQyxrQkFBbUIscUJBQ25CQyxtQkFBb0Isb0JBUXRCc0IsRUFBSUcsY0FBY3BKLE1BQUssU0FBQ0MsR0FDdEJrSixFQUFpQkUsWUFBWXBKLEdBQzdCa0osRUFBaUJHLGlCQUFpQnJKLE1BRW5Dc0osT0FBTSxTQUFDQyxHQUNOQyxRQUFRQyxJQUFJRixNQWFkLElBQU1HLEVBQW1CLElBQUlqRCxFQUFBQSxRQUFlLFlBQzVDaUQsRUFBaUJDLG9CQUVqQixJQUFNQyxFQUEwQixTQUFDekksRUFBTUMsR0FDckNzSSxFQUFpQkcsS0FBSzFJLEVBQU1DLElBU3hCMEksRUFBZ0IsU0FBQzlJLEVBQVErSSxHQUUxQkEsRUFDRTNILGNBQWMsaUJBQ2RnQyxVQUFVd0IsU0FBUyx1QkFldEJtRSxFQUNHM0gsY0FBYyxpQkFDZGdDLFVBQVV3QixTQUFTLHdCQUV0Qm9ELEVBQ0dnQixXQUFXaEosR0FDWGpCLE1BQUssU0FBQ0MsR0FDTCtKLEVBQVMzSCxjQUFjLHVCQUF1QkssWUFDNUN6QyxFQUFJcUIsTUFBTW5FLE9BQVMsRUFBSThDLEVBQUlxQixNQUFNbkUsT0FBUyxHQUM1QzZNLEVBQ0czSCxjQUFjLGlCQUNkZ0MsVUFBVTZGLE9BQU8sMEJBRXJCWCxPQUFNLFNBQUNDLEdBQ05DLFFBQVFDLElBQUlGLE1BM0JoQlAsRUFDR2tCLFFBQVFsSixHQUNSakIsTUFBSyxTQUFDQyxHQUNMK0osRUFBUzNILGNBQWMsdUJBQXVCSyxZQUM1Q3pDLEVBQUlxQixNQUFNbkUsT0FDWjZNLEVBQ0czSCxjQUFjLGlCQUNkZ0MsVUFBVTZGLE9BQU8sMEJBRXJCWCxPQUFNLFNBQUNDLEdBQ05DLFFBQVFDLElBQUlGLE9Ba0NkWSxFQUFrQixJQUFJdEUsRUFBQUEsUUFBWSx1QkFWZCxTQUFDN0UsRUFBUWlGLEdBQ2pDK0MsRUFBSW9CLFdBQVdwSixHQUFRakIsTUFBSyxXQUMxQmtHLEVBQVkzQixTQUNaMkIsRUFBYyxRQUVmcUQsT0FBTSxTQUFDQyxHQUNOQyxRQUFRQyxJQUFJRixTQUtoQlksRUFBZ0JSLG9CQVFoQixJQUFNVSxFQUFxQixTQUFDckosRUFBUWlGLEdBQVQsT0FBeUJrRSxFQUFnQk4sS0FBSzdJLEVBQVFpRixJQWEzRXFFLEVBQWUsU0FDbkJDLEVBQ0FDLEVBRm1CLE1BTW5CcEQsR0FDRyxJQUpEN0YsRUFJQyxFQUpEQSxnQkFDQUMsRUFHQyxFQUhEQSxnQkFDQUMsRUFFQyxFQUZEQSxrQkFVSWdKLEVBUFcsSUFBSXhKLEVBQUFBLFFBQ25Cc0osRUFDQUMsRUFDQSxDQUFFakosZ0JBQUFBLEdBQ0YsQ0FBRUMsZ0JBQUFBLEdBQ0YsQ0FBRUMsa0JBQUFBLElBRXlCaUosYUFFekJILEVBQVNsSixNQUFNdUQsTUFBSyxTQUFDK0YsR0FBRCxPQUFXQSxFQUFNckosS0FBTzRILEVBQWlCL0UsT0FDL0RzRyxFQUFZckksY0FBYyxpQkFBaUJnQyxVQUFVQyxJQUFJLHVCQUd2RGtHLEVBQVNLLE1BQU10SixNQUFRNEgsRUFBaUIvRSxLQUMxQ3NHLEVBQVlySSxjQUFjLHdCQUF3QjBDLGFBQWEsWUFBWSxHQUMzRTJGLEVBQVlySSxjQUFjLHdCQUF3QmdDLFVBQVVDLElBQUksOEJBR2xFd0csRUFBWUMsUUFBUUwsRUFBYXJELElBUTdCeUQsRUFBYyxJQUFJbkUsRUFBQUEsUUFDdEIsQ0FDRUcsU0FBVSxTQUFDMEQsR0FDVEQsRUFDRUMsRUFDQSxRQUNBLENBQ0VoSixnQkFBaUJxSSxHQUVuQixDQUNFcEksZ0JBQWlCc0ksR0FFbkIsQ0FDRXJJLGtCQUFtQjRJLE1BSzNCVSxFQUFBQSxnQkFTRi9CLEVBQUlnQyxrQkFBa0JqTCxNQUFLLFNBQUFDLEdBQ3pCNkssRUFBWUksWUFBWWpMLE1BRXpCc0osT0FBTSxTQUFDQyxHQUNOQyxRQUFRQyxJQUFJRixNQWlCZCxJQXFCTTJCLEVBQW1CLElBQUkvRSxFQUFBQSxRQUMzQix3QkF0QndCLFNBQUNnRixHQUN6Qm5DLEVBQUlvQyxhQUFhRCxHQUNoQjdCLE9BQU0sU0FBQ0MsR0FDTkMsUUFBUUMsSUFBSUYsTUFFZEwsRUFBaUJFLFlBQVkrQixHQUM3QkQsRUFBaUJ2RixXQW1CbkJ1RixFQUFpQnZCLG9CQUdqQixJQUFNMEIsRUFBa0IsSUFBSWxGLEVBQUFBLFFBQzFCLGdDQW5CdUIsU0FBQ2dGLEdBQ3hCbkMsRUFBSXNDLFdBQVdILEdBQ2Q3QixPQUFNLFNBQUNDLEdBQ05DLFFBQVFDLElBQUlGLE1BRWRMLEVBQWlCRyxpQkFBaUI4QixHQUNsQ0UsRUFBZ0IxRixXQWdCbEIwRixFQUFnQjFCLG9CQUloQixJQUFNNEIsRUFBZSxJQUFJcEYsRUFBQUEsUUFBYyxvQkFBb0IsU0FBQ29FLEdBQzFEdkIsRUFBSXdDLFlBQVlqQixHQUFVeEssTUFBSyxTQUFDQyxHQUM5QnNLLEVBQ0V0SyxFQUNBLFFBQ0EsQ0FDRXVCLGdCQUFpQnFJLEdBRW5CLENBQ0VwSSxnQkFBaUJzSSxHQUVuQixDQUNFckksa0JBQW1CNEksR0FFckIsV0FFRmtCLEVBQWE1RixXQUVkMkQsT0FBTSxTQUFDQyxHQUNOQyxRQUFRQyxJQUFJRixTQUdoQmdDLEVBQWE1QixvQkFRYixJQUFNOEIsRUFBb0IsSUFBSTNJLEVBQUFBLFFBQWNDLEVBQUFBLFNBQVV5RixHQUNoRGtELEVBQW9CLElBQUk1SSxFQUFBQSxRQUFjQyxFQUFBQSxTQUFVMEYsR0FDaERrRCxFQUFzQixJQUFJN0ksRUFBQUEsUUFBY0MsRUFBQUEsU0FBVTJGLEdBRXhEK0MsRUFBa0JHLG1CQUNsQkYsRUFBa0JFLG1CQUNsQkQsRUFBb0JDLG1CQU1wQmpELEVBQXVCOUYsaUJBQWlCLFNBQVMsV0FDL0MsSUFBTWdKLEVBQWtCM0MsRUFBaUJDLGNBQ3pDTCxFQUFjdEssTUFBUXFOLEVBQWdCMUssS0FDdEM0SCxFQUFldkssTUFBUXFOLEVBQWdCL0QsTUFDdkNvRCxFQUFpQnJCLFVBR25CakIsRUFBbUIvRixpQkFBaUIsU0FBUyxXQUMzQzBJLEVBQWExQixPQUNiNkIsRUFBa0JFLHNCQUdwQi9DLEVBQWtCaEcsaUJBQWlCLFNBQVMsV0FDMUN3SSxFQUFnQnhCLE9BQ2hCOEIsRUFBb0JDLHNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2Fzc2VydFRoaXNJbml0aWFsaXplZC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0cy5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0LmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zZXRQcm90b3R5cGVPZi5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvc3VwZXJQcm9wQmFzZS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFN1Ym1pdC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvdXRpbHMvY29uc3RzLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvcGFnZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gIGlmIChzZWxmID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gIH1cblxuICByZXR1cm4gc2VsZjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfYXNzZXJ0VGhpc0luaXRpYWxpemVkO1xubW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHMsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlOyIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2NsYXNzQ2FsbENoZWNrO1xubW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHMsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlOyIsImZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7XG4gIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfY3JlYXRlQ2xhc3M7XG5tb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cywgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7IiwidmFyIHN1cGVyUHJvcEJhc2UgPSByZXF1aXJlKFwiLi9zdXBlclByb3BCYXNlLmpzXCIpO1xuXG5mdW5jdGlvbiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyKSB7XG4gIGlmICh0eXBlb2YgUmVmbGVjdCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBSZWZsZWN0LmdldCkge1xuICAgIG1vZHVsZS5leHBvcnRzID0gX2dldCA9IFJlZmxlY3QuZ2V0O1xuICAgIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IF9nZXQgPSBmdW5jdGlvbiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyKSB7XG4gICAgICB2YXIgYmFzZSA9IHN1cGVyUHJvcEJhc2UodGFyZ2V0LCBwcm9wZXJ0eSk7XG4gICAgICBpZiAoIWJhc2UpIHJldHVybjtcbiAgICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihiYXNlLCBwcm9wZXJ0eSk7XG5cbiAgICAgIGlmIChkZXNjLmdldCkge1xuICAgICAgICByZXR1cm4gZGVzYy5nZXQuY2FsbChyZWNlaXZlcik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBkZXNjLnZhbHVlO1xuICAgIH07XG5cbiAgICBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cywgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG4gIH1cblxuICByZXR1cm4gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlciB8fCB0YXJnZXQpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9nZXQ7XG5tb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cywgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7IiwiZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgIHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7XG4gIH07XG4gIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbiAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfZ2V0UHJvdG90eXBlT2Y7XG5tb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cywgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7IiwidmFyIHNldFByb3RvdHlwZU9mID0gcmVxdWlyZShcIi4vc2V0UHJvdG90eXBlT2YuanNcIik7XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO1xuICB9XG5cbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgY29uc3RydWN0b3I6IHtcbiAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbiAgaWYgKHN1cGVyQ2xhc3MpIHNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfaW5oZXJpdHM7XG5tb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cywgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7IiwiZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICBcImRlZmF1bHRcIjogb2JqXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdDtcbm1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTsiLCJ2YXIgX3R5cGVvZiA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3R5cGVvZlwiKVtcImRlZmF1bHRcIl07XG5cbnZhciBhc3NlcnRUaGlzSW5pdGlhbGl6ZWQgPSByZXF1aXJlKFwiLi9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQuanNcIik7XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHtcbiAgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHtcbiAgICByZXR1cm4gY2FsbDtcbiAgfSBlbHNlIGlmIChjYWxsICE9PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7XG4gIH1cblxuICByZXR1cm4gYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuO1xubW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHMsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlOyIsImZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgby5fX3Byb3RvX18gPSBwO1xuICAgIHJldHVybiBvO1xuICB9O1xuXG4gIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbiAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfc2V0UHJvdG90eXBlT2Y7XG5tb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cywgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7IiwidmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZShcIi4vZ2V0UHJvdG90eXBlT2YuanNcIik7XG5cbmZ1bmN0aW9uIF9zdXBlclByb3BCYXNlKG9iamVjdCwgcHJvcGVydHkpIHtcbiAgd2hpbGUgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSkpIHtcbiAgICBvYmplY3QgPSBnZXRQcm90b3R5cGVPZihvYmplY3QpO1xuICAgIGlmIChvYmplY3QgPT09IG51bGwpIGJyZWFrO1xuICB9XG5cbiAgcmV0dXJuIG9iamVjdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfc3VwZXJQcm9wQmFzZTtcbm1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTsiLCJmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7XG5cbiAgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgICAgIHJldHVybiB0eXBlb2Ygb2JqO1xuICAgIH07XG5cbiAgICBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cywgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG4gIH0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xuICAgIH07XG5cbiAgICBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cywgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG4gIH1cblxuICByZXR1cm4gX3R5cGVvZihvYmopO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF90eXBlb2Y7XG5tb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cywgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7IiwiY29uc3QgZmV0Y2hGdW5jdGlvbiA9ICh1cmwsICBoZWFkZXJzKSA9PiB7XHJcbiAgcmV0dXJuIGZldGNoKHVybCwgaGVhZGVycylcclxuICAgICAgLnRoZW4ocmVzID0+IHJlcy5vayA/IHJlcy5qc29uKCkgOiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKSlcclxuICBcclxufVxyXG5cclxuXHJcbmV4cG9ydCBjbGFzcyBBcGkge1xyXG4gIGNvbnN0cnVjdG9yKHtiYXNlVXJsLCBoZWFkZXJzfSkge1xyXG4gICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XHJcbiAgICB0aGlzLl9oZWFkZXJzID0gaGVhZGVycztcclxuICB9XHJcblxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIGZldGNoRnVuY3Rpb24oYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgcmV0dXJuIGZldGNoRnVuY3Rpb24oYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZWRpdFVzZXJJbmZvKGRhdGEpIHtcclxuICAgIHJldHVybiBmZXRjaEZ1bmN0aW9uKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSlcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYWRkUG9zdENhcmQoZGF0YSkge1xyXG4gICAgcmV0dXJuIGZldGNoRnVuY3Rpb24oYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpXHJcbiAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYWRkTGlrZShjYXJkSWQpIHtcclxuICAgIHJldHVybiBmZXRjaEZ1bmN0aW9uKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzL2xpa2VzLyR7Y2FyZElkfWAsIHtcclxuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICB9KTtcclxuICB9XHJcblxyXG4gIHJlbW92ZUxpa2UoY2FyZElkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2hGdW5jdGlvbihgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy9saWtlcy8ke2NhcmRJZH1gLCB7XHJcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgfSk7XHJcbiAgfVxyXG5cclxuICBkZWxldGVDYXJkKGNhcmRJZCkge1xyXG4gICAgcmV0dXJuIGZldGNoRnVuY3Rpb24oYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9YCwge1xyXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZWRpdEF2YXRhcihkYXRhKSB7XHJcbiAgICByZXR1cm4gZmV0Y2hGdW5jdGlvbihgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKVxyXG4gICB9KTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3Ioe25hbWUsIGxpbmssIGxpa2VzLCBfaWR9LCB0ZW1wbGF0ZVNlbGVjdG9yLCB7IGhhbmRsZUNhcmRDbGljayB9LCB7IGhhbmRsZUxpa2VDbGljayB9LCB7IGhhbmRsZURlbGV0ZUNsaWNrIH0pIHtcclxuICAgIHRoaXMuX2NhcmRUaXRsZSA9IG5hbWU7XHJcbiAgICB0aGlzLl9jYXJkVXJsID0gbGluaztcclxuICAgIHRoaXMuX2xpa2UgPSBsaWtlcztcclxuICAgIHRoaXMuX2xpa2VzID0gbGlrZXMubGVuZ3RoO1xyXG4gICAgdGhpcy5fY2FyZElkID0gX2lkO1xyXG4gICAgdGhpcy5fdGVtcGxhdGVTZWxlY3RvciA9IHRlbXBsYXRlU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XHJcbiAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2sgPSBoYW5kbGVMaWtlQ2xpY2s7XHJcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljayA9IGhhbmRsZURlbGV0ZUNsaWNrO1xyXG4gIH1cclxuXHJcbiAgX2dldFRlbXBsYXRlKCkge1xyXG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudFxyXG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yKVxyXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLnBvc3RcIilcclxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcclxuXHJcbiAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XHJcbiAgfVxyXG5cclxuICBjcmVhdGVDYXJkKCkge1xyXG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XHJcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9zdF9faGVhZGluZ1wiKS50ZXh0Q29udGVudCA9IHRoaXMuX2NhcmRUaXRsZTtcclxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3N0X19pbWFnZVwiKS5hbHQgPVxyXG4gICAgICBcIkEgcGhvdG8gb2YgXCIgKyB0aGlzLl9jYXJkVGl0bGU7XHJcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9zdF9faW1hZ2VcIikuc3JjID0gdGhpcy5fY2FyZFVybDtcclxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3N0X19saWtlLWNvdW50ZXJcIikudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlcyAgPiAwID8gIHRoaXMuX2xpa2VzIDogXCJcIjtcclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2VsZW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucG9zdF9fZGVsZXRlLWJ1dHRvblwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljayh0aGlzLl9jYXJkSWQsIHRoaXMuX2VsZW1lbnQpO1xyXG4gICAgICB9KTtcclxuICAgIHRoaXMuX2VsZW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucG9zdF9fYnV0dG9uXCIpXHJcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayh0aGlzLl9jYXJkSWQsIHRoaXMuX2VsZW1lbnQpO1xyXG4gICAgICB9KTtcclxuICAgIHRoaXMuX2VsZW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucG9zdF9faW1hZ2UtYnV0dG9uXCIpXHJcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayh0aGlzLl9jYXJkVGl0bGUsIHRoaXMuX2NhcmRVcmwpO1xyXG4gICAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XHJcbiAgICB0aGlzLl9zZXR0aW5ncyA9IHNldHRpbmdzO1xyXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtRWxlbWVudDtcclxuICAgIHRoaXMuX3N1Ym1taXRCdXR0b24gPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBzZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvclxyXG4gICAgKTtcclxuICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20oXHJcbiAgICAgIGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2V0dGluZ3MuaW5wdXRTZWxlY3RvcilcclxuICAgICk7XHJcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IHNldHRpbmdzLmlucHV0RXJyb3JDbGFzcztcclxuICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBzZXR0aW5ncy5lcnJvckNsYXNzO1xyXG4gIH1cclxuXHJcbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgZXJyb3JNZXNzYWdlKSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmBcclxuICAgICk7XHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XHJcbiAgfVxyXG5cclxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmBcclxuICAgICk7XHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gIH1cclxuXHJcbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpIHtcclxuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfaGFzSW52YWxpZElucHV0KCkge1xyXG4gICAgY29uc3QgaGFzSW52YWxpZElucHV0ID0gdGhpcy5faW5wdXRMaXN0LnNvbWUoXHJcbiAgICAgIChpbnB1dEVsZW1lbnQpID0+ICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWRcclxuICAgICk7XHJcbiAgICByZXR1cm4gaGFzSW52YWxpZElucHV0O1xyXG4gIH1cclxuXHJcbiAgX3RvZ2dsZVN1Ym1pdEJ1dHRvbigpIHtcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xyXG4gICAgICB0aGlzLl9zdWJtbWl0QnV0dG9uLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgIHRoaXMuX3N1Ym1taXRCdXR0b24uc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIiwgXCJ0cnVlXCIpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fc3VibW1pdEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9zdWJtbWl0QnV0dG9uLnJlbW92ZUF0dHJpYnV0ZShcImRpc2FibGVkXCIpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fdG9nZ2xlU3VibWl0QnV0dG9uKCk7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xyXG4gICAgICAgIHRoaXMuX3RvZ2dsZVN1Ym1pdEJ1dHRvbigpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlID0gIHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XHJcbiAgfVxyXG5cclxuXHJcbiAgb3BlbigpIHtcclxuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcblxyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUVzY0Nsb3NlKGV2dCkge1xyXG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcclxuICAgICAgaWYgKGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wdXBfb3BlbmVkXCIpIHx8IGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wdXBfX2Nsb3NlLWJ1dHRvblwiKSkge1xyXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFN1Ym1pdCBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBzdWJtaXRGb3JtSGFuZGxlcikge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9zdWJtaXRGb3JtSGFuZGxlciA9IHN1Ym1pdEZvcm1IYW5kbGVyO1xyXG4gICAgdGhpcy5fc3VibWl0RGVsZXRlSGFuZGxlciA9IHRoaXMuX3N1Ym1pdERlbGV0ZUhhbmRsZXIuYmluZCh0aGlzKTtcclxuICB9XHJcblxyXG4gIG9wZW4oIGNhcmRJZCwgY2FyZEVsZW1lbnQpIHtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIHRoaXMuX2NhcmRJZCA9IGNhcmRJZDtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gY2FyZEVsZW1lbnQ7XHJcbiAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIHRoaXMuX3N1Ym1pdERlbGV0ZUhhbmRsZXIpO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICBzdXBlci5jbG9zZSgpO1xyXG4gICAgdGhpcy5fcG9wdXAucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCB0aGlzLl9zdWJtaXREZWxldGVIYW5kbGVyKTtcclxuICB9XHJcblxyXG4gIF9zdWJtaXREZWxldGVIYW5kbGVyKGV2dCkgIHtcclxuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgdGhpcy5fc3VibWl0Rm9ybUhhbmRsZXIodGhpcy5fY2FyZElkLCB0aGlzLl9jYXJkRWxlbWVudClcclxuICAgIHRoaXMuY2xvc2UoKTtcclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIHN1Ym1pdEZvcm1IYW5kbGVyKSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX3N1Ym1pdEZvcm1IYW5kbGVyID0gc3VibWl0Rm9ybUhhbmRsZXI7XHJcbiAgfVxyXG5cclxuICBvcGVuKCkge1xyXG4gICAgc3VwZXIub3BlbigpO1xyXG4gICAgdGhpcy5fdHh0ID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fc2F2ZS1idXR0b25cIikudGV4dENvbnRlbnQ7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtXCIpLnJlc2V0KCk7XHJcbiAgICB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19zYXZlLWJ1dHRvblwiKS50ZXh0Q29udGVudCA9IHRoaXMuX3R4dDtcclxuICB9XHJcblxyXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcclxuICAgIHRoaXMuX2lucHV0TGlzdCA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9wdXBfX2Zvcm0taW5wdXRcIik7XHJcbiAgICB0aGlzLl9mb3JtVmFsdWVzID0ge307XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgdGhpcy5fZm9ybVZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gdGhpcy5fZm9ybVZhbHVlcztcclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19zYXZlLWJ1dHRvblwiKS50ZXh0Q29udGVudCA9IFwiU2F2aW5nLi4uXCI7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEZvcm1IYW5kbGVyKHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBvcGVuKG5hbWUsIGxpbmspIHtcclxuICAgIHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlXCIpLnNyYyA9IGxpbms7XHJcbiAgICB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbWFnZVwiKS5hbHQgPSBcIkEgcGljdHVyZSBvZiBcIiArIG5hbWU7XHJcbiAgICB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19jYXB0aW9uXCIpLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyZXIgfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX2l0ZW1zQXJyYXkgPSBpdGVtcztcclxuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIHJlbmRlckl0ZW1zKG90aGVyRGF0YSkge1xyXG4gICAgb3RoZXJEYXRhID8gdGhpcy5faXRlbXNBcnJheSA9IG90aGVyRGF0YSA6IFwiXCI7XHJcbiAgICB0aGlzLl9pdGVtc0FycmF5LmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG5cclxuICBhZGRJdGVtKGVsZW1lbnQsIGF0dGFjaEl0ZW1NZXRob2QpIHtcclxuICAgIGF0dGFjaEl0ZW1NZXRob2QgIT09ICdwcmVwZW5kJyA/XHJcbiAgICAgIHRoaXMuX2NvbnRhaW5lci5hcHBlbmQoZWxlbWVudCkgOlxyXG4gICAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuICB9XHJcbn1cclxuXHJcblxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgY29uc3RydWN0b3IoeyB1c2VyTmFtZVNlbGVjdG9yLCB1c2VyQWJvdXRTZWxlY3RvciwgdXNlckF2YXRhclNlbGVjdG9yIH0pIHtcclxuICAgIHRoaXMuX3VzZXJOYW1lQ3VycmVudERhdGEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJOYW1lU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fdXNlckFib3V0Q3VycmVudERhdGEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJBYm91dFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX3VzZXJBdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJBdmF0YXJTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIGNvbnN0IHVzZXJEYXRhID0ge1xyXG4gICAgICBuYW1lOiB0aGlzLl91c2VyTmFtZUN1cnJlbnREYXRhLnRleHRDb250ZW50LFxyXG4gICAgICBhYm91dDogdGhpcy5fdXNlckFib3V0Q3VycmVudERhdGEudGV4dENvbnRlbnQsXHJcblxyXG4gICAgfTtcclxuICAgIHJldHVybiB1c2VyRGF0YTtcclxuICB9XHJcblxyXG4gIHNldFVzZXJJbmZvKHsgbmFtZSwgYWJvdXQsIGF2YXRhciwgX2lkIH0pIHtcclxuICAgIHRoaXMuX3VzZXJOYW1lQ3VycmVudERhdGEudGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgdGhpcy5fdXNlckFib3V0Q3VycmVudERhdGEudGV4dENvbnRlbnQgPSBhYm91dDtcclxuICAgIHRoaXMuaWQgPSBfaWQ7XHJcbiAgfVxyXG5cclxuICB1cGRhdGVVc2VyQXZhdGFyKHsgYXZhdGFyIH0pIHtcclxuICAgIHRoaXMuX3VzZXJBdmF0YXIuc3JjID0gYXZhdGFyO1xyXG4gIH1cclxufVxyXG4iLCJcclxuZXhwb3J0IGNvbnN0IHBvc3RzQ29udGFpbmVyID0gXCIucG9zdC1jb250YWluZXJcIlxyXG5leHBvcnQgY29uc3Qgc2V0dGluZ3MgPSB7XHJcbiAgaW5wdXRTZWxlY3RvcjogXCIucG9wdXBfX2Zvcm0taW5wdXRcIixcclxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIucG9wdXBfX3NhdmUtYnV0dG9uXCIsXHJcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJwb3B1cF9fc2F2ZS1idXR0b25fZGlzYWJsZWRcIixcclxuICBpbnB1dEVycm9yQ2xhc3M6IFwicG9wdXBfX2Zvcm0taW5wdXRfdHlwZV9lcnJvclwiLFxyXG4gIGVycm9yQ2xhc3M6IFwicG9wdXBfX2Zvcm0taW5wdXQtZXJyb3JfYWN0aXZlXCIsXHJcbn07XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCJpbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IHsgcG9zdHNDb250YWluZXIsIHNldHRpbmdzIH0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0cy5qc1wiO1xyXG5pbXBvcnQgeyBBcGksIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpLmpzXCJcclxuaW1wb3J0IFBvcHVwU3VibWl0IGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwU3VibWl0LmpzXCI7XHJcblxyXG4vL2RlY2xhcmluZ3MgY29uc3RzIG9mIHRoZSBkb20gZWxlbWVudHMgdGhhdCBpbiBpbmRleC5odG1sXHJcblxyXG5jb25zdCBlZGl0Rm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZm9ybV9fcHJvZmlsZVwiKTtcclxuY29uc3QgcG9zdEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zvcm1fX3Bvc3RcIik7XHJcbmNvbnN0IGF2YXRhckZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zvcm1fX2F2YXRhclwiKTtcclxuY29uc3Qgb3BlbkVkaXRQcm9maWxlRm9ybUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9faW5mby1idXR0b25cIik7XHJcbmNvbnN0IG9wZW5BZGRDYXJkRnJvbUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fcGx1cy1idXR0b25cIik7XHJcbmNvbnN0IG9wZW5FZGl0QXZhdGFyQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19pbWFnZS1idXR0b25cIik7XHJcbmNvbnN0IHVzZXJOYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI25hbWVcIik7XHJcbmNvbnN0IHVzZXJBYm91dElucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhYm91dFwiKTtcclxuXHJcblxyXG5cclxuLy9kZWNsYXJpbmcgYW4gaW5zdGFuY2Ugb2YgQXBpIGNsYXNzIGZvciByZXF1ZXN0aW5nIG9yIGVkaXRpbmcgZGF0YVxyXG5cclxuY29uc3QgYXBpID0gbmV3IEFwaSh7XHJcbiAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL2dyb3VwLTEyXCIsXHJcbiAgaGVhZGVyczoge1xyXG4gICAgYXV0aG9yaXphdGlvbjogXCJmZDEwNjhhZS01MDRiLTQ5YTAtOWQ2Mi02MzJkMTg0MTRiZTFcIixcclxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuXHJcblxyXG5cclxuXHJcbi8vIGRlY2xhcmluZyBhIFVzZXJJbmZvIGNsYXNzIHRoYXQgY2FuIHNob3cgdGhlIGN1cnJlbnQgdXNlciBkYXRhIC1cclxuLy8gLSBhbmQgcmVuZGVyIHRoZSBkYXRhIGZyb20gdGhlIGlucHV0IGZpZWxkcyB0byB0aGUgcGFnZSB2aWEgaXRzIG1ldGhvZHMuXHJcbi8vIGFsc28gdGhpcyBjbGFzcyBzdG9yZXMgb3RoZXIgdXNlciBkYXRhIGZvciBsYXRlciB1c2VcclxuXHJcbmNvbnN0IHJlbmRlcmVkVXNlckluZm8gPSBuZXcgVXNlckluZm8oe1xyXG4gIHVzZXJOYW1lU2VsZWN0b3I6IFwiLnByb2ZpbGVfX3RpdGxlXCIsXHJcbiAgdXNlckFib3V0U2VsZWN0b3I6IFwiLnByb2ZpbGVfX3N1YnRpdGxlXCIsXHJcbiAgdXNlckF2YXRhclNlbGVjdG9yOiBcIi5wcm9maWxlX19pbWFnZVwiXHJcbn0pO1xyXG5cclxuLy91c2luZyB0aGUgaW5zdGFuY2Ugb2YgdGhlIEFwaSBjbGFzcyB0byBnZXQgdGhlIGN1cnJlbnQgdXNlciBkYXRhXHJcbi8vdGhlbiBwYXNzaW5nIGl0IHRvIHRoZSBtZXRob2Qgb2YgdGhlIFVzZXJJbmZvIGNsYXNzXHJcbi8vdG8gcmVuZGVyIHRoZSBjdXJyZW50IHVzZXIgZGF0YVxyXG5cclxuXHJcbmFwaS5nZXRVc2VySW5mbygpLnRoZW4oKHJlcykgPT4ge1xyXG4gIHJlbmRlcmVkVXNlckluZm8uc2V0VXNlckluZm8ocmVzKTtcclxuICByZW5kZXJlZFVzZXJJbmZvLnVwZGF0ZVVzZXJBdmF0YXIocmVzKTtcclxufSlcclxuLmNhdGNoKChlcnIpID0+IHtcclxuICBjb25zb2xlLmxvZyhlcnIpO1xyXG59KTtcclxuXHJcblxyXG5cclxuXHJcblxyXG4vLyBkZWNsYXJpbmcgdGhlIHRoZSBwcm9wZXIgcG9wdXAgY2xhc3MuXHJcbi8vIHRoZSAub3BlbigpIG1ldGhvZCBvZiB0aGUgY2xhc3Mgd2lsbCBvcGVuIGEgcG9wdXAgLVxyXG4vLyAtIHRoYXQgd2lsbCBiZSBnZW5lcmF0ZWQgZnJvbSB0aGUgY2FyZCBkYXRhLlxyXG4vLyB0aGUgbWV0aG9kIHdpbGwgYmUgYWRkZWQgdmlhIGEgaGFuZGxlciAtXHJcbi8vIC0gZm9yIGVhY2ggY2FyZCB0aGF0IHdpbGwgYmUgcmVuZGVyZCB0byB0aGUgcGFnZS5cclxuXHJcbmNvbnN0IG9wZW5QaWN0dXJlUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIjcGljdHVyZVwiKTtcclxub3BlblBpY3R1cmVQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3Qgb3BlblBpY3R1cmVQb3B1cEhhbmRsZXIgPSAobmFtZSwgbGluaykgPT4ge1xyXG4gIG9wZW5QaWN0dXJlUG9wdXAub3BlbihuYW1lLCBsaW5rKTtcclxufTtcclxuXHJcblxyXG5cclxuLy9jb25zdHJ1Y3RpbmcgYSBoYW5kbGVyIHRoYXQgd2lsbCBlZGl0IHRoZSBhbW91bnQgb2YgbGlrZXMgb2YgYSBjYXJkXHJcbi8vKG9uIHRoZSBzZXJ2ZXIgYW5kIG9uIHRoZSBsaWtlIGNvdW50ZXIgb2YgdGhlIGNhcmQpIHRyaWdnZXJlZCBieSBhIGNsaWNrIG9uIHRoZSBidXR0b25cclxuLy90aGUgaGFuZGxlciBpcyB1c2luZyB0aGUgIDIgYXBpIG1ldGhvZHNcclxuXHJcbmNvbnN0IGxpa2VDYXJkUGF0Y2ggPSAoY2FyZElkLCB0aGlzQ2FyZCkgPT4ge1xyXG4gIGlmIChcclxuICAgICF0aGlzQ2FyZFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5wb3N0X19idXR0b25cIilcclxuICAgICAgLmNsYXNzTGlzdC5jb250YWlucyhcInBvc3RfX2J1dHRvbl9hY3RpdmVcIilcclxuICApIHtcclxuICAgIGFwaVxyXG4gICAgICAuYWRkTGlrZShjYXJkSWQpXHJcbiAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICB0aGlzQ2FyZC5xdWVyeVNlbGVjdG9yKFwiLnBvc3RfX2xpa2UtY291bnRlclwiKS50ZXh0Q29udGVudCA9XHJcbiAgICAgICAgICByZXMubGlrZXMubGVuZ3RoO1xyXG4gICAgICAgIHRoaXNDYXJkXHJcbiAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5wb3N0X19idXR0b25cIilcclxuICAgICAgICAgIC5jbGFzc0xpc3QudG9nZ2xlKFwicG9zdF9fYnV0dG9uX2FjdGl2ZVwiKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICB9KTtcclxuICB9IGVsc2UgaWYgKFxyXG4gICAgdGhpc0NhcmRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucG9zdF9fYnV0dG9uXCIpXHJcbiAgICAgIC5jbGFzc0xpc3QuY29udGFpbnMoXCJwb3N0X19idXR0b25fYWN0aXZlXCIpXHJcbiAgKSB7XHJcbiAgICBhcGlcclxuICAgICAgLnJlbW92ZUxpa2UoY2FyZElkKVxyXG4gICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgdGhpc0NhcmQucXVlcnlTZWxlY3RvcihcIi5wb3N0X19saWtlLWNvdW50ZXJcIikudGV4dENvbnRlbnQgPVxyXG4gICAgICAgICAgcmVzLmxpa2VzLmxlbmd0aCA+IDAgPyByZXMubGlrZXMubGVuZ3RoIDogXCJcIjtcclxuICAgICAgICB0aGlzQ2FyZFxyXG4gICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucG9zdF9fYnV0dG9uXCIpXHJcbiAgICAgICAgICAuY2xhc3NMaXN0LnRvZ2dsZShcInBvc3RfX2J1dHRvbl9hY3RpdmVcIik7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgfSk7XHJcbiAgfVxyXG59O1xyXG5cclxuXHJcblxyXG5jb25zdCBkZWxldGVQb3N0SGVuZGxlciA9IChjYXJkSWQsIGNhcmRFbGVtZW50KSA9PiB7XHJcbiAgYXBpLmRlbGV0ZUNhcmQoY2FyZElkKS50aGVuKCgpID0+IHtcclxuICAgIGNhcmRFbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgY2FyZEVsZW1lbnQgPSBudWxsO1xyXG4gIH0pXHJcbiAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgfSk7XHJcbn1cclxuXHJcbmNvbnN0IHBvcHVwRGVsZXRlQ2FyZCA9IG5ldyBQb3B1cFN1Ym1pdChcIiNkZWxldGUtcG9zdF9fcG9wdXBcIiwgZGVsZXRlUG9zdEhlbmRsZXIpO1xyXG5wb3B1cERlbGV0ZUNhcmQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8vZGVsZXRlIGNsaWNrIGhhbmRsZXJzXHJcblxyXG5cclxuXHJcblxyXG5cclxuY29uc3QgZGVsZXRlQ0xpY2tIYW5kbGVyID0gKGNhcmRJZCwgY2FyZEVsZW1lbnQpID0+IHBvcHVwRGVsZXRlQ2FyZC5vcGVuKGNhcmRJZCwgY2FyZEVsZW1lbnQpXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbi8vIGEgZnVuY3Rpb24gdGhhdCBnZW5lcmF0ZSBhIGNhcmQgdmlhIHRoZSBDYXJkIGNsYXNzIC1cclxuLy8gdGhlIGZ1bmN0aW9uIHdpbGwgYmUgcGFzc2VkIGFzIGEgY2FsbGJhY2sgdG8gIHRoZSBTZWN0aW9uIGNsYXNzIGluc3RhbmNlXHJcblxyXG5jb25zdCBjYXJkUmVuZGVyZXIgPSAoXHJcbiAgY2FyZERhdGEsXHJcbiAgY2FyZFRhbXBsYXRlU2VsZWN0b3IsXHJcbiAgeyBoYW5kbGVDYXJkQ2xpY2sgfSxcclxuICB7IGhhbmRsZUxpa2VDbGljayB9LFxyXG4gIHsgaGFuZGxlRGVsZXRlQ2xpY2sgfSxcclxuICBhdHRhY2hJdGVtTWV0aG9kLFxyXG4pID0+IHtcclxuICBjb25zdCBwb3N0Q2FyZCA9IG5ldyBDYXJkKFxyXG4gICAgY2FyZERhdGEsXHJcbiAgICBjYXJkVGFtcGxhdGVTZWxlY3RvcixcclxuICAgIHsgaGFuZGxlQ2FyZENsaWNrIH0sXHJcbiAgICB7IGhhbmRsZUxpa2VDbGljayB9LFxyXG4gICAgeyBoYW5kbGVEZWxldGVDbGljayB9XHJcbiAgKTtcclxuICBjb25zdCBjYXJkQ3JlYXRlZCA9IHBvc3RDYXJkLmNyZWF0ZUNhcmQoKTtcclxuICAvL2NoZWNraW5nIGlmIGxpa2VkIGEgY2FyZCBhbW9uZyB0aGUgcmVuZGVyZWQgaW5pdGlhbCBjYXJkcywgdGhlbiBzZXR0aW5nIHRoaWVyIGxpa2UgYnV0dG9uIGFjdGl2ZVxyXG4gIGlmIChjYXJkRGF0YS5saWtlcy5zb21lKChlbnRyeSkgPT4gZW50cnkuX2lkID09IHJlbmRlcmVkVXNlckluZm8uaWQpKSB7XHJcbiAgICBjYXJkQ3JlYXRlZC5xdWVyeVNlbGVjdG9yKFwiLnBvc3RfX2J1dHRvblwiKS5jbGFzc0xpc3QuYWRkKFwicG9zdF9fYnV0dG9uX2FjdGl2ZVwiKTtcclxuICB9XHJcbiAgLy9jaGVja2luZyBpZiB0aGUgaW5pdGlhbCBjYXJkcyBkb24ndCBoYXZlIG15IGlkIHRvIGRpc2FibGUgdGhlcmUgZGVsZXRlIGJ1dHRvblxyXG4gIGlmIChjYXJkRGF0YS5vd25lci5faWQgIT09IHJlbmRlcmVkVXNlckluZm8uaWQpIHtcclxuICAgIGNhcmRDcmVhdGVkLnF1ZXJ5U2VsZWN0b3IoXCIucG9zdF9fZGVsZXRlLWJ1dHRvblwiKS5zZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLCB0cnVlKTtcclxuICAgIGNhcmRDcmVhdGVkLnF1ZXJ5U2VsZWN0b3IoXCIucG9zdF9fZGVsZXRlLWJ1dHRvblwiKS5jbGFzc0xpc3QuYWRkKFwicG9zdF9fZGVsZXRlLWJ1dHRvbl9oaWRlblwiKVxyXG4gIH1cclxuXHJcbiAgY2FyZFNlY3Rpb24uYWRkSXRlbShjYXJkQ3JlYXRlZCwgYXR0YWNoSXRlbU1ldGhvZCk7XHJcblxyXG59O1xyXG5cclxuXHJcblxyXG4vL2RlY2xhcmluZyBhbiBpbnN0YW5jZSBvZiBTZWN0aW9uIGNsYXNzIGZvciByZW5kZXJpbmcgY2FyZHMgdG8gdGhlIGRvbVxyXG5cclxuY29uc3QgY2FyZFNlY3Rpb24gPSBuZXcgU2VjdGlvbihcclxuICB7XHJcbiAgICByZW5kZXJlcjogKGNhcmREYXRhKSA9PiB7XHJcbiAgICAgIGNhcmRSZW5kZXJlcihcclxuICAgICAgICBjYXJkRGF0YSxcclxuICAgICAgICBcIiNjYXJkXCIsXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgaGFuZGxlQ2FyZENsaWNrOiBvcGVuUGljdHVyZVBvcHVwSGFuZGxlclxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgaGFuZGxlTGlrZUNsaWNrOiBsaWtlQ2FyZFBhdGNoXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICBoYW5kbGVEZWxldGVDbGljazogZGVsZXRlQ0xpY2tIYW5kbGVyXHJcbiAgICAgICAgfSxcclxuICAgICAgKTtcclxuICAgIH0sXHJcbiAgfSxcclxuICBwb3N0c0NvbnRhaW5lclxyXG4pO1xyXG5cclxuXHJcblxyXG4vL3VzaW5nIHRoZSBhcGkgbWV0aG9kIHRvIHJlY2l2ZSB0aGUgaW5pdGlhbCBjYXJkcyBkYXRhXHJcbi8vdGhlbiBwYXNzaW5nIGl0IHRvIHRoZSBtZXRob2Qgb2YgdGhlIHNlY3Rpb24gY2xhc3NcclxuLy90byByZW5kZXIgdGhlIGluaXRpYWwgY2FyZHNcclxuXHJcbmFwaS5nZXRJbml0aWFsQ2FyZHMoKS50aGVuKHJlcyA9PiB7XHJcbiAgY2FyZFNlY3Rpb24ucmVuZGVySXRlbXMocmVzKTtcclxufSlcclxuLmNhdGNoKChlcnIpID0+IHtcclxuICBjb25zb2xlLmxvZyhlcnIpO1xyXG59KTtcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4vLyBhIGhhbmRsZXIgdGhhdCByZW5kZXJzIHRoZSBkYXRhIGZyb20gdGhlIGZvcm0gLVxyXG4vLyAtIHRvIHRoZSBwYWdlIHZpYSBVc2VySW5mbyBjbGFzcyBtZXRob2QuXHJcbi8vYW5kIHNlbmRzIHRoZSBkYXRhIHRvIHRoZSBzZXJ2ZXIuXHJcblxyXG5jb25zdCBzdWJtaXRQcm9maWxlRm9ybSA9IChuZXdVc2VyRGF0YSkgPT4ge1xyXG4gIGFwaS5lZGl0VXNlckluZm8obmV3VXNlckRhdGEpXHJcbiAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgfSk7XHJcbiAgcmVuZGVyZWRVc2VySW5mby5zZXRVc2VySW5mbyhuZXdVc2VyRGF0YSk7XHJcbiAgcG9wdXBFZGl0UHJvZmlsZS5jbG9zZSgpO1xyXG59O1xyXG5cclxuXHJcbmNvbnN0IHN1Ym1pdEF2YXRhckZvcm0gPSAobmV3VXNlckRhdGEpID0+IHtcclxuICBhcGkuZWRpdEF2YXRhcihuZXdVc2VyRGF0YSlcclxuICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgY29uc29sZS5sb2coZXJyKTtcclxuICB9KTtcclxuICByZW5kZXJlZFVzZXJJbmZvLnVwZGF0ZVVzZXJBdmF0YXIobmV3VXNlckRhdGEpO1xyXG4gIHBvcHVwRWRpdEF2YXRhci5jbG9zZSgpO1xyXG59O1xyXG5cclxuLy8gZGVjbGFyaW5nIHRoZSB0aGUgcHJvcGVyIHBvcHVwIGNsYXNzIGFuZCBzZXR0aW5nIHRoaWVyIGV2ZW50bGlzdGVyc1xyXG5cclxuY29uc3QgcG9wdXBFZGl0UHJvZmlsZSA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gIFwiI2VkaXQtcHJvZmlsZV9fcG9wdXBcIixcclxuICBzdWJtaXRQcm9maWxlRm9ybVxyXG4pO1xyXG5wb3B1cEVkaXRQcm9maWxlLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5cclxuY29uc3QgcG9wdXBFZGl0QXZhdGFyID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgXCIjZWRpdC1wcm9maWxlLXBpY3R1cmVfX3BvcHVwXCIsXHJcbiAgc3VibWl0QXZhdGFyRm9ybVxyXG4pO1xyXG5wb3B1cEVkaXRBdmF0YXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcblxyXG5cclxuY29uc3QgcG9wdXBBZGRDYXJkID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIjYWRkLXBvc3RfX3BvcHVwXCIsIChjYXJkRGF0YSkgPT4ge1xyXG4gIGFwaS5hZGRQb3N0Q2FyZChjYXJkRGF0YSkudGhlbigocmVzKSA9PiB7XHJcbiAgICBjYXJkUmVuZGVyZXIoXHJcbiAgICAgIHJlcyxcclxuICAgICAgXCIjY2FyZFwiLFxyXG4gICAgICB7XHJcbiAgICAgICAgaGFuZGxlQ2FyZENsaWNrOiBvcGVuUGljdHVyZVBvcHVwSGFuZGxlclxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgaGFuZGxlTGlrZUNsaWNrOiBsaWtlQ2FyZFBhdGNoXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBoYW5kbGVEZWxldGVDbGljazogZGVsZXRlQ0xpY2tIYW5kbGVyXHJcbiAgICAgIH0sXHJcbiAgICAgIFwicHJlcGVuZFwiXHJcbiAgICApO1xyXG4gICAgcG9wdXBBZGRDYXJkLmNsb3NlKCk7XHJcbiAgfSlcclxuICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgY29uc29sZS5sb2coZXJyKTtcclxuICB9KTtcclxufSk7XHJcbnBvcHVwQWRkQ2FyZC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuXHJcblxyXG5cclxuXHJcbi8vIGZvcm0gdmFsaWFkYXRpb246XHJcblxyXG5jb25zdCBlZGl0Rm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHNldHRpbmdzLCBlZGl0Rm9ybSk7XHJcbmNvbnN0IHBvc3RGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3Ioc2V0dGluZ3MsIHBvc3RGb3JtKTtcclxuY29uc3QgYXZhdGFyRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHNldHRpbmdzLCBhdmF0YXJGb3JtKTtcclxuXHJcbmVkaXRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxucG9zdEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5hdmF0YXJGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcblxyXG5cclxuLy8gYXR0YWNoaW5nIGV2ZW50IGxpc3RlbnJzIHRvIGJ1dHRvbnMgb2cgdGhlIHBhZ2VcclxuXHJcbm9wZW5FZGl0UHJvZmlsZUZvcm1CdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICBjb25zdCB1c2VyQ3VycmVudERhdGEgPSByZW5kZXJlZFVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XHJcbiAgdXNlck5hbWVJbnB1dC52YWx1ZSA9IHVzZXJDdXJyZW50RGF0YS5uYW1lO1xyXG4gIHVzZXJBYm91dElucHV0LnZhbHVlID0gdXNlckN1cnJlbnREYXRhLmFib3V0O1xyXG4gIHBvcHVwRWRpdFByb2ZpbGUub3BlbigpO1xyXG59KTtcclxuXHJcbm9wZW5BZGRDYXJkRnJvbUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gIHBvcHVwQWRkQ2FyZC5vcGVuKCk7XHJcbiAgcG9zdEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpOyBcclxufSk7XHJcblxyXG5vcGVuRWRpdEF2YXRhckJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gIHBvcHVwRWRpdEF2YXRhci5vcGVuKCk7XHJcbiAgYXZhdGFyRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbn0pO1xyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VsZiIsIlJlZmVyZW5jZUVycm9yIiwiX19lc01vZHVsZSIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiaSIsImxlbmd0aCIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImtleSIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsInByb3RvdHlwZSIsInN1cGVyUHJvcEJhc2UiLCJyZXF1aXJlIiwiX2dldCIsInByb3BlcnR5IiwicmVjZWl2ZXIiLCJSZWZsZWN0IiwiZ2V0IiwiYmFzZSIsImRlc2MiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJjYWxsIiwidmFsdWUiLCJfZ2V0UHJvdG90eXBlT2YiLCJvIiwic2V0UHJvdG90eXBlT2YiLCJnZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwib2JqIiwiX3R5cGVvZiIsImFzc2VydFRoaXNJbml0aWFsaXplZCIsIl9zZXRQcm90b3R5cGVPZiIsInAiLCJvYmplY3QiLCJoYXNPd25Qcm9wZXJ0eSIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiZmV0Y2hGdW5jdGlvbiIsInVybCIsImhlYWRlcnMiLCJmZXRjaCIsInRoZW4iLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiQXBpIiwiYmFzZVVybCIsInRoaXMiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwiZGF0YSIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiY2FyZElkIiwiQ2FyZCIsInRlbXBsYXRlU2VsZWN0b3IiLCJuYW1lIiwibGluayIsImxpa2VzIiwiX2lkIiwiaGFuZGxlQ2FyZENsaWNrIiwiaGFuZGxlTGlrZUNsaWNrIiwiaGFuZGxlRGVsZXRlQ2xpY2siLCJfY2FyZFRpdGxlIiwiX2NhcmRVcmwiLCJfbGlrZSIsIl9saWtlcyIsIl9jYXJkSWQiLCJfdGVtcGxhdGVTZWxlY3RvciIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfaGFuZGxlTGlrZUNsaWNrIiwiX2hhbmRsZURlbGV0ZUNsaWNrIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9lbGVtZW50IiwiX2dldFRlbXBsYXRlIiwidGV4dENvbnRlbnQiLCJhbHQiLCJzcmMiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJhZGRFdmVudExpc3RlbmVyIiwiRm9ybVZhbGlkYXRvciIsInNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJfc2V0dGluZ3MiLCJfZm9ybUVsZW1lbnQiLCJfc3VibW1pdEJ1dHRvbiIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dFNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImlucHV0RWxlbWVudCIsImVycm9yTWVzc2FnZSIsImVycm9yRWxlbWVudCIsImlkIiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwic29tZSIsIl9oYXNJbnZhbGlkSW5wdXQiLCJzZXRBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJfdG9nZ2xlU3VibWl0QnV0dG9uIiwiZm9yRWFjaCIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cCIsIl9oYW5kbGVFc2NDbG9zZSIsImJpbmQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY2xvc2UiLCJjb250YWlucyIsIlBvcHVwU3VibWl0Iiwic3VibWl0Rm9ybUhhbmRsZXIiLCJfc3VibWl0Rm9ybUhhbmRsZXIiLCJfc3VibWl0RGVsZXRlSGFuZGxlciIsImNhcmRFbGVtZW50IiwiX2NhcmRFbGVtZW50IiwiUG9wdXBXaXRoRm9ybSIsIl90eHQiLCJyZXNldCIsIl9mb3JtVmFsdWVzIiwiaW5wdXQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJQb3B1cFdpdGhJbWFnZSIsIlNlY3Rpb24iLCJjb250YWluZXJTZWxlY3RvciIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXNBcnJheSIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJvdGhlckRhdGEiLCJpdGVtIiwiZWxlbWVudCIsImF0dGFjaEl0ZW1NZXRob2QiLCJhcHBlbmQiLCJwcmVwZW5kIiwiVXNlckluZm8iLCJ1c2VyTmFtZVNlbGVjdG9yIiwidXNlckFib3V0U2VsZWN0b3IiLCJ1c2VyQXZhdGFyU2VsZWN0b3IiLCJfdXNlck5hbWVDdXJyZW50RGF0YSIsIl91c2VyQWJvdXRDdXJyZW50RGF0YSIsIl91c2VyQXZhdGFyIiwiYWJvdXQiLCJhdmF0YXIiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiciIsInRvU3RyaW5nVGFnIiwiZWRpdEZvcm0iLCJwb3N0Rm9ybSIsImF2YXRhckZvcm0iLCJvcGVuRWRpdFByb2ZpbGVGb3JtQnRuIiwib3BlbkFkZENhcmRGcm9tQnRuIiwib3BlbkVkaXRBdmF0YXJCdG4iLCJ1c2VyTmFtZUlucHV0IiwidXNlckFib3V0SW5wdXQiLCJhcGkiLCJhdXRob3JpemF0aW9uIiwicmVuZGVyZWRVc2VySW5mbyIsImdldFVzZXJJbmZvIiwic2V0VXNlckluZm8iLCJ1cGRhdGVVc2VyQXZhdGFyIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwib3BlblBpY3R1cmVQb3B1cCIsInNldEV2ZW50TGlzdGVuZXJzIiwib3BlblBpY3R1cmVQb3B1cEhhbmRsZXIiLCJvcGVuIiwibGlrZUNhcmRQYXRjaCIsInRoaXNDYXJkIiwicmVtb3ZlTGlrZSIsInRvZ2dsZSIsImFkZExpa2UiLCJwb3B1cERlbGV0ZUNhcmQiLCJkZWxldGVDYXJkIiwiZGVsZXRlQ0xpY2tIYW5kbGVyIiwiY2FyZFJlbmRlcmVyIiwiY2FyZERhdGEiLCJjYXJkVGFtcGxhdGVTZWxlY3RvciIsImNhcmRDcmVhdGVkIiwiY3JlYXRlQ2FyZCIsImVudHJ5Iiwib3duZXIiLCJjYXJkU2VjdGlvbiIsImFkZEl0ZW0iLCJwb3N0c0NvbnRhaW5lciIsImdldEluaXRpYWxDYXJkcyIsInJlbmRlckl0ZW1zIiwicG9wdXBFZGl0UHJvZmlsZSIsIm5ld1VzZXJEYXRhIiwiZWRpdFVzZXJJbmZvIiwicG9wdXBFZGl0QXZhdGFyIiwiZWRpdEF2YXRhciIsInBvcHVwQWRkQ2FyZCIsImFkZFBvc3RDYXJkIiwiZWRpdEZvcm1WYWxpZGF0b3IiLCJwb3N0Rm9ybVZhbGlkYXRvciIsImF2YXRhckZvcm1WYWxpZGF0b3IiLCJlbmFibGVWYWxpZGF0aW9uIiwidXNlckN1cnJlbnREYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==